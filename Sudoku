//MATHEUS SEIBERT DA SILVA RÉGIS MARCEL DOSS
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>
#include <locale.h>
#define TAM 9
int sudoku[TAM][TAM]= { {5,3,0,0,7,0,0,0,0},
                        {6,0,0,1,9,5,0,0,0},
                        {0,9,8,0,0,0,0,6,0},
                        {8,0,0,0,6,0,0,0,3},
                        {4,0,0,8,0,3,0,0,1},
                        {7,0,0,0,2,0,0,0,6},
                        {0,6,0,0,0,0,2,8,0},
                        {0,0,0,4,1,9,0,0,5},
                        {0,0,0,0,8,0,0,7,9}
};
void printJogo(int sudoku[TAM][TAM]);
void inserir (int sudoku[TAM][TAM]);
int verfSetor(int valor, int linha, int coluna, int sudoku[TAM][TAM]);
int verfCol(int valor,int lin, int col,int sudoku[TAM][TAM]);
int verfLin(int valor,int lin, int col,int sudoku[TAM][TAM]);
int vernum(int valor, int lin, int col,int sudoku[TAM][TAM]);
int verGanhou(int sudoku[TAM][TAM]);

int main()
{
    setlocale(LC_ALL, "Portuguese");
    printJogo(sudoku);
    do
    {
        inserir(sudoku);
        verGanhou(sudoku);
    }
    while(verGanhou(sudoku)==1);
    printf("você ganhou!");
    return 0;
}

void printJogo(int sudoku[TAM][TAM])
{

    int i, j;

    for (i = 0; i < 9; i++)
    {
        for (j = 0; j < 9; j++)
        {
            printf(" %d", sudoku[i][j]);
            if (j % 3 == 2) printf(" ");
        }
        printf("\n");
        if (i % 3 == 2) printf("\n");
    }



    printf("\n");
}
void inserir (int sudoku[TAM][TAM])
{
    int i, j,n;
    do
    {
        printf("Número:(Para corrigir erros, ponha o 0 no local desejado)\n");
        scanf("%d", &n);
        if(n>9)
            printf("Número impossivél! Tente novamente:\n");
        else
        {

            printf("Linha: ");
            scanf("%d", &i);
            i--;

            printf("Coluna: ");
            scanf("%d", &j);
            j--;

            if((verfLin(n, i, j, sudoku) == 0) && (verfCol(n, i, j, sudoku)==0) && (verfSetor(n, i, j, sudoku)==0) && (vernum(n, i, j, sudoku)==0))
                sudoku[i][j] = n;
            else if (verfLin(n, i, j, sudoku) == 1)
                printf("Linha já possuí o número\n");
            else if (verfCol(n, i, j, sudoku) == 1)
                printf("Coluna já possuí o número\n");
            else if (verfSetor(n, i, j, sudoku) == 1)
                printf("Setor já possuí o número\n");
            else if(vernum(n,i,j,sudoku)==1)
                printf("Local já possuí um número!\n");
        }
        printJogo(sudoku);
    }while(verGanhou(sudoku)==1);



}

//verificações de existencia do valor ja inserido na matriz
int verfLin(int valor,int lin, int col, int sudoku[TAM][TAM])
{
    int j;
    if(valor == 0)
        return 0;

    for(j=0; j<9; j++)
    {
        if(valor==sudoku[lin][j])
        {
            return 1;
        }
    }
    return 0;

}


int verfCol(int valor,int lin, int col,int sudoku[TAM][TAM])
{
    int i;
        if(valor == 0)
        return 0;

    for(i=0; i<9; i++)
    {
        if(valor==sudoku[i][col])
            return 1;
    }

    return 0;
}

int verfSetor(int valor, int setorLin, int setorCol, int sudoku[TAM][TAM])
{
    int i, j, LinhaSetor, ColunaSetor, iniJ, iniI;
     iniI=setorLin;
     iniJ=setorCol;
         if(valor == 0)
        return 0;

     LinhaSetor = iniI - iniI%3;
     ColunaSetor = iniJ - iniJ%3;
    for ( i = 0; i < 3; i++) {
        for ( j = 0; j < 3; j++) {
            if (sudoku[i + LinhaSetor][j + ColunaSetor] == valor)
                return 1;
}

    }
       return 0;
}


int vernum(int valor, int setorLin, int setorCol, int sudoku[TAM][TAM]){

        if((sudoku[setorLin][setorCol]>1) || (sudoku[setorLin][setorCol]==0))
            return 0;
                else
                    return 1;

}

int verGanhou(int sudoku[TAM][TAM])
{
    int i, j;

for ( i = 0; i < TAM; i++) {
        for ( j = 0; j < TAM; j++) {
            if (sudoku[i][j] == 0)
                return 1;
        }
    }
    return 0;
}


