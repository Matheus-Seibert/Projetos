/*O anexo main.c foi adicionado.Conversa aberta. Uma mensagem não lida.

Pular para o conteúdo
Como usar o E-mail de MX2 - UNISC com leitores de tela

1 de 200
(sem assunto)
Caixa de entrada

KEN TAKAHATA <ken@mx2.unisc.br>
Anexos
19:15 (há 0 minuto)
para mim, REGIS


 Um anexo
  •  Anexos verificados pelo Gmail*/
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>
#include <locale.h>
#define TAM 9
int sudoku[TAM][TAM]= {{5,3,4,6,7,8,9,1,2},
    {6,7,2,1,9,5,3,4,8},
    {1,9,8,3,4,2,5,6,7},
    {8,5,9,7,6,1,0,2,3},
    {4,2,6,8,5,3,7,9,1},
    {7,1,3,9,2,4,8,5,6},
    {9,6,1,5,3,7,2,8,4},
    {2,8,7,4,1,9,6,3,5},
    {3,4,5,2,8,6,1,7,9}
};
void printJogo(int sudoku[TAM][TAM]);
void inserir (int sudoku[TAM][TAM]);
int verfSetor(int valor, int linha, int coluna, int sudoku[TAM][TAM]);
int verfCol(int valor,int lin, int col,int sudoku[TAM][TAM]);
int verfLin(int valor,int lin, int col,int sudoku[TAM][TAM]);
int verGanhou(int sudoku[TAM][TAM]);
int checarset(int set[3][3]);

int main()
{
    setlocale(LC_ALL, "Portuguese");
    do
    {
        printJogo(sudoku);
        inserir(sudoku);
        verGanhou(sudoku);
    }
    while(verGanhou(sudoku)!=0);
    printf("você ganhou!");
    return 0;
}

void printJogo(int sudoku[TAM][TAM])
{

    int i, j;

    for (i = 0; i < 9; i++)
    {
        for (j = 0; j < 9; j++)
        {
            printf(" %d", sudoku[i][j]);
            if (j % 3 == 2) printf(" ");
        }
        printf("\n");
        if (i % 3 == 2) printf("\n");
    }



    printf("\n");
}
void inserir (int sudoku[TAM][TAM])
{
    int i, j,n;
    do
    {
        printf("Número:");
        scanf("%d", &n);
        if((n>9) || (n<1))
            printf("Número impossivél! Tente novamente:\n");
        else
        {

            printf("Linha: ");
            scanf("%d", &i);
            i--;

            printf("Coluna: ");
            scanf("%d", &j);
            j--;

            if((verfLin(n, i, j, sudoku) == 0) && (verfCol(n, i, j, sudoku)==0) && (verfSetor(n, i, j, sudoku)==0))
                sudoku[i][j] = n;
            else if (verfLin(n, i, j, sudoku) == 1)
                printf("linha/n");
            else if (verfCol(n, i, j, sudoku) == 1)
                printf("coluna/n");
            else if (verfSetor(n, i, j, sudoku) == 1)
                printf("setor/n");
            else
                printf("Erro n indentificado");


        }

    }
    while(verGanhou(sudoku)!=1);


}

//verificações de existencia do valor ja inserido na matriz
int verfLin(int valor,int lin, int col, int sudoku[TAM][TAM])
{
    int j;

    for(j=0; j<col; j++)
    {
        if(valor==sudoku[lin][j])
        {
            return 1;
        }
    }
    return 0;

}


int verfCol(int valor,int lin, int col,int sudoku[TAM][TAM])
{
    int i;

    for(i=0; i<lin; i++)
    {
        if(valor==sudoku[i][col])
            return 1;
    }

    return 0;
}

int verfSetor(int valor, int setorLin, int setorCol, int sudoku[TAM][TAM])
{
    int i,j;
    int iniI=(setorLin*3)-3;        //calculo para localizar inicio
    int iniJ=(setorCol*3)-3;
    //printf("%i  %i ",iniI,iniJ);
    for(i=iniI; i<setorLin*3; i++)
    {
        for(j=iniJ; j<setorCol*3; j++)
        {
            if(valor==sudoku[i][j])

                return 1;
        }

    }
    return 0;


}

int verGanhou(int sudoku[TAM][TAM])
{
    int i, j,soma=0, contador=0;


    for(i = 0; i < TAM; i ++)
    {
        for(j = 0; j < TAM; j ++)
        {
            soma = soma + sudoku[i][j];

        }
        if(soma==45)
            soma = 0;
        contador++;
    }
    if(contador==9)
        return 1;
    else
        return 0;
}



